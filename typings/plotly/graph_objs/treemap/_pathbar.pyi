"""
This type stub file was generated by pyright.
"""

from plotly.basedatatypes import BaseTraceHierarchyType as _BaseTraceHierarchyType

class Pathbar(_BaseTraceHierarchyType):
    _parent_path_str = ...
    _path_str = ...
    _valid_props = ...
    @property
    def edgeshape(self): # -> tuple[Any, ...] | Self | None:
        """
        Determines which shape is used for edges between `barpath`
        labels.

        The 'edgeshape' property is an enumeration that may be specified as:
          - One of the following enumeration values:
                ['>', '<', '|', '/', '\\']

        Returns
        -------
        Any
        """
        ...
    
    @edgeshape.setter
    def edgeshape(self, val): # -> None:
        ...
    
    @property
    def side(self): # -> tuple[Any, ...] | Self | None:
        """
        Determines on which side of the the treemap the `pathbar`
        should be presented.

        The 'side' property is an enumeration that may be specified as:
          - One of the following enumeration values:
                ['top', 'bottom']

        Returns
        -------
        Any
        """
        ...
    
    @side.setter
    def side(self, val): # -> None:
        ...
    
    @property
    def textfont(self): # -> tuple[Any, ...] | Self | None:
        """
        Sets the font used inside `pathbar`.

        The 'textfont' property is an instance of Textfont
        that may be specified as:
          - An instance of :class:`plotly.graph_objs.treemap.pathbar.Textfont`
          - A dict of string/value properties that will be passed
            to the Textfont constructor

        Returns
        -------
        plotly.graph_objs.treemap.pathbar.Textfont
        """
        ...
    
    @textfont.setter
    def textfont(self, val): # -> None:
        ...
    
    @property
    def thickness(self): # -> tuple[Any, ...] | Self | None:
        """
        Sets the thickness of `pathbar` (in px). If not specified the
        `pathbar.textfont.size` is used with 3 pixles extra padding on
        each side.

        The 'thickness' property is a number and may be specified as:
          - An int or float in the interval [12, inf]

        Returns
        -------
        int|float
        """
        ...
    
    @thickness.setter
    def thickness(self, val): # -> None:
        ...
    
    @property
    def visible(self): # -> tuple[Any, ...] | Self | None:
        """
        Determines if the path bar is drawn i.e. outside the trace
        `domain` and with one pixel gap.

        The 'visible' property must be specified as a bool
        (either True, or False)

        Returns
        -------
        bool
        """
        ...
    
    @visible.setter
    def visible(self, val): # -> None:
        ...
    
    def __init__(self, arg=..., edgeshape=..., side=..., textfont=..., thickness=..., visible=..., **kwargs) -> None:
        """
        Construct a new Pathbar object

        Parameters
        ----------
        arg
            dict of properties compatible with this constructor or
            an instance of
            :class:`plotly.graph_objs.treemap.Pathbar`
        edgeshape
            Determines which shape is used for edges between
            `barpath` labels.
        side
            Determines on which side of the the treemap the
            `pathbar` should be presented.
        textfont
            Sets the font used inside `pathbar`.
        thickness
            Sets the thickness of `pathbar` (in px). If not
            specified the `pathbar.textfont.size` is used with 3
            pixles extra padding on each side.
        visible
            Determines if the path bar is drawn i.e. outside the
            trace `domain` and with one pixel gap.

        Returns
        -------
        Pathbar
        """
        ...
    


